# Fichier: tasks/03_setup_database.yml
---
- name: (RESET) Remove previous MariaDB data directory to ensure a clean state
  ansible.builtin.file:
    path: /var/lib/mysql
    state: absent

- name: Ensure MariaDB data directory exists
  ansible.builtin.file:
    path: /var/lib/mysql
    state: directory
    owner: "{{ db_os_user }}"
    group: "{{ db_os_user }}"
    mode: '0755'

- name: Ensure the directory for the socket exists
  ansible.builtin.file:
    path: "{{ db_socket_path | dirname }}"
    state: directory
    owner: "{{ db_os_user }}"
    group: "{{ db_os_user }}"
    mode: '0755'

- name: Ensure PID directory exists (for RedHat family)
  ansible.builtin.file:
    path: "{{ db_pid_dir }}"
    state: directory
    owner: "{{ db_os_user }}"
    group: "{{ db_os_user }}"
    mode: '0755'
  when: ansible_os_family == "RedHat"

- name: Initialize MariaDB data directory
  ansible.builtin.command:
    cmd: "mariadb-install-db --user={{ db_os_user }} --datadir=/var/lib/mysql"
  changed_when: true

- name: (Cleanup) Ensure no old MariaDB processes are running
  ansible.builtin.shell:
    cmd: "killall mysqld_safe mariadbd || true"
  changed_when: false

- name: Start MariaDB process directly
  ansible.builtin.shell:
    cmd: "mysqld_safe --datadir=/var/lib/mysql &"
  changed_when: true

- name: Wait for MariaDB socket to be ready before proceeding
  ansible.builtin.wait_for:
    path: "{{ db_socket_path }}"
    state: present
    timeout: 60
    delay: 5

- name: Set MariaDB root password
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ db_root_password }}"
    login_unix_socket: "{{ db_socket_path }}"

- name: Remove anonymous MariaDB users
  community.mysql.mysql_user:
    name: ""
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"

- name: Remove MariaDB test database
  community.mysql.mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ db_root_password }}"

- name: Create WordPress database
  community.mysql.mysql_db:
    name: "{{ db_name }}"
    state: present
    login_user: root
    login_password: "{{ db_root_password }}"

- name: Create WordPress database user
  community.mysql.mysql_user:
    name: "{{ db_user }}"
    host: localhost
    password: "{{ db_password }}"
    priv: "{{ db_name }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ db_root_password }}"
